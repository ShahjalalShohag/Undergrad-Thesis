# -*- coding: utf-8 -*-
"""thesis plot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gleSEecmfHWLwuZdZVq4I5jrljp0qYmg
"""

from google.colab import drive
drive.mount('/content/drive')

# importing the modules
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import os
from pathlib import Path
path = Path(os.getcwd())
print(path)
plt.rc('font', size=13) #controls default text size
plt.rcParams['figure.dpi'] = 100
sns.set_style('whitegrid')
fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(8, 5)) 

x = np.arange(0.01, 0.20, 0.01)
y1 = [0.83, 0.85, 0.84, 0.80, 0.85, 0.84, 0.83, 0.88, 0.85, 0.75, 0.69, 0.75, 0.78, 0.74, 0.80, 0.82, 0.73, 0.85, 0.49]
y2 = [0.87, 0.87, 0.84, 0.76, 0.68, 0.63, 0.52, 0.54, 0.56, 0.23, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.23, 0.37, 0.00]
y3 = [0.88, 0.91, 0.93, 0.95, 0.95, 0.95, 0.95, 0.95, 0.94, 0.96, 0.96, 0.95, 0.95, 0.95, 0.95, 0.95, 0.95, 0.96, 0.95]
y_list = [y1, y2, y3]
line_labels = ["Random", "Greedy", "DNA"]

for y, label in zip(y_list, line_labels):  
    plt.plot(x, y, marker='.', markersize=16, label = label)


major_xticks = [round(num, 2) for num in np.linspace(0, 0.20, 5)]
major_yticks = np.arange(0.1, 1.0 + 0.01, 0.10)

axes.set_xticks(major_xticks)
axes.set_yticks(major_yticks)
axes.legend()


# plotting
plt.title("DM-HT(Biological Network)")
plt.xlabel("Edges Added($\%$)")
plt.ylabel("Core Resilience")

plt.savefig(path/'drive'/'My Drive'/'thesis'/'plot1.pdf', dpi = 400)

plt.show()

plt.rc('font', size=13) #controls default text size
plt.rcParams['figure.dpi'] = 100
sns.set_style('whitegrid')
fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(8, 5)) 

x = np.arange(0.01, 0.20, 0.01)
y1 = [0.66, 0.84, 0.73, 0.73, 0.87, 0.85, 0.80, 0.76, 0.79, 0.86, 0.84, 0.85, 0.78, 0.80, 0.73, 0.55, 0.65, 0.65, 0.55]
y2 = [0.69, 0.67, 0.80, 0.59, 0.66, 0.69, 0.68, 0.60, 0.65, 0.71, 0.59, 0.80, 0.76, 0.70, 0.79, 0.64, 0.61, 0.85, 0.55]
y3 = [0.76, 0.76, 0.74, 0.67, 0.82, 0.65, 0.87, 0.89, 0.64, 0.86, 0.84, 0.87, 0.87, 0.87, 0.90, 0.91, 0.84, 0.90, 0.76]
y_list = [y1, y2, y3]
line_labels = ["Random", "Greedy", "DNA"]

for y, label in zip(y_list, line_labels):  
    plt.plot(x, y, marker='.', markersize=16, label = label)


major_xticks = [round(num, 2) for num in np.linspace(0, 0.20, 5)]
major_yticks = np.arange(0.1, 1.0 + 0.01, 0.10)

axes.set_xticks(major_xticks)
axes.set_yticks(major_yticks)
axes.legend()


# plotting
plt.title("fp-pages-food(Social Network)")
plt.xlabel("Edges Added($\%$)")
plt.ylabel("Core Resilience")

plt.savefig(path/'drive'/'My Drive'/'thesis'/'plot2.pdf', dpi = 400)

plt.show()

plt.rc('font', size=13) #controls default text size
plt.rcParams['figure.dpi'] = 100
sns.set_style('whitegrid')
fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(8, 5)) 

x = np.arange(0.01, 0.20, 0.01)
y1 = [0.87, 0.88, 0.88, 0.57, 0.73, 0.72, 0.74, 0.82, 0.75, 0.79, 0.70, 0.68, 0.73, 0.67, 0.70, 0.83, 0.82, 0.79, 0.73]
y2 = [0.76, 0.50, 0.54, 0.67, 0.69, 0.81, 0.68, 0.78, 0.75, 0.79, 0.75, 0.69, 0.80, 0.78, 0.79, 0.75, 0.72, 0.72, 0.74]
y3 = [0.93, 0.94, 0.93, 0.94, 0.94, 0.95, 0.94, 0.95, 0.95, 0.96, 0.96, 0.94, 0.95, 0.95, 0.94, 0.96, 0.94, 0.95, 0.96]
y_list = [y1, y2, y3]
line_labels = ["Random", "Greedy", "DNA"]

for y, label in zip(y_list, line_labels):  
    plt.plot(x, y, marker='.', markersize=16, label = label)


major_xticks = [round(num, 2) for num in np.linspace(0, 0.20, 5)]
major_yticks = np.arange(0.1, 1.0 + 0.01, 0.10)

axes.set_xticks(major_xticks)
axes.set_yticks(major_yticks)
axes.legend()


# plotting
plt.title("ce-LC(Biological Network)")
plt.xlabel("Edges Added($\%$)")
plt.ylabel("Core Resilience")

plt.savefig(path/'drive'/'My Drive'/'thesis'/'plot3.pdf', dpi = 400)

plt.show()

plt.rc('font', size=13) #controls default text size
plt.rcParams['figure.dpi'] = 100
sns.set_style('whitegrid')
fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(8, 5)) 

x = np.arange(0.01, 0.20, 0.01)
y1 = [0.53, 0.67, 0.70, 0.76, 0.82, 0.81, 0.83, 0.82, 0.86, 0.84, 0.84, 0.87, 0.87, 0.86, 0.88, 0.87, 0.88, 0.89, 0.00]
y2 = [0.65, 0.65, 0.67, 0.73, 0.72, 0.76, 0.67, 0.78, 0.80, 0.82, 0.81, 0.83, 0.82, 0.84, 0.78, 0.77, 0.67, 0.78, 0.86]
y3 = [0.73, 0.64, 0.75, 0.79, 0.76, 0.90, 0.92, 0.89, 0.88, 0.87, 0.88, 0.89, 0.90, 0.92, 0.91, 0.89, 0.88, 0.92, 0.94]
y_list = [y1, y2, y3]
line_labels = ["Random", "Greedy", "DNA"]

for y, label in zip(y_list, line_labels):  
    plt.plot(x, y, marker='.', markersize=16, label = label)


major_xticks = [round(num, 2) for num in np.linspace(0, 0.20, 5)]
major_yticks = np.arange(0.1, 1.0 + 0.01, 0.10)

axes.set_xticks(major_xticks)
axes.set_yticks(major_yticks)
axes.legend()


# plotting
plt.title("openflights (Infrastructure Networks)")
plt.xlabel("Edges Added($\%$)")
plt.ylabel("Core Resilience")

plt.savefig(path/'drive'/'My Drive'/'thesis'/'plot4.pdf', dpi = 400)

plt.show()

plt.rc('font', size=13) #controls default text size
plt.rcParams['figure.dpi'] = 100
sns.set_style('whitegrid')
fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(8, 5)) 

x = np.arange(0.01, 0.20, 0.01)
y1 = [0.83, 0.83, 0.87, 0.81, 0.80, 0.82, 0.78, 0.77, 0.76, 0.77, 0.84, 0.84, 0.83, 0.70, 0.81, 0.68, 0.53, 0.59, 0.45]
y2 = [0.80, 0.80, 0.87, 0.84, 0.83, 0.87, 0.85, 0.86, 0.83, 0.87, 0.88, 0.51, 0.72, 0.66, 0.62, 0.89, 0.00, 0.00, 0.00]
y3 = [0.87, 0.83, 0.87, 0.88, 0.67, 0.76, 0.87, 0.85, 0.86, 0.86, 0.90, 0.82, 0.85, 0.84, 0.83, 0.75, 0.74, 0.76, 0.79]
y_list = [y1, y2, y3]
line_labels = ["Random", "Greedy", "DNA"]

for y, label in zip(y_list, line_labels):  
    plt.plot(x, y, marker='.', markersize=16, label = label)


major_xticks = [round(num, 2) for num in np.linspace(0, 0.20, 5)]
major_yticks = np.arange(0.1, 1.0 + 0.01, 0.10)

axes.set_xticks(major_xticks)
axes.set_yticks(major_yticks)
axes.legend()


# plotting
plt.title("tech-routers-rf (Technological Network)")
plt.xlabel("Edges Added($\%$)")
plt.ylabel("Core Resilience")

plt.savefig(path/'drive'/'My Drive'/'thesis'/'plot5.pdf', dpi = 400)

plt.show()

plt.rc('font', size=13) #controls default text size
plt.rcParams['figure.dpi'] = 100
sns.set_style('whitegrid')
fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(8, 5)) 

x = np.arange(0.01, 0.20, 0.01)
y1 = [0.83, 0.81, 0.70, 0.62, 0.66, 0.74, 0.75, 0.71, 0.70, 0.70, 0.76, 0.82, 0.81, 0.83, 0.85, 0.90, 0.90, 0.88, 0.91]
y2 = [0.98, 0.98, 0.93, 0.97, 0.92, 0.86, 0.85, 0.86, 0.86, 0.81, 0.84, 0.85, 0.90, 0.95, 0.98, 0.98, 0.98, 0.97, 0.98]
y3 = [0.97, 0.95, 0.97, 0.98, 0.96, 0.98, 0.91, 0.97, 0.94, 0.96, 0.95, 0.97, 0.98, 1.00, 0.99, 0.87, 0.95, 0.98, 0.88]
y_list = [y1, y2, y3]
line_labels = ["Random", "Greedy", "DNA"]

for y, label in zip(y_list, line_labels):  
    plt.plot(x, y, marker='.', markersize=16, label = label)


major_xticks = [round(num, 2) for num in np.linspace(0, 0.20, 5)]
major_yticks = np.arange(0.1, 1.0 + 0.01, 0.10)

axes.set_xticks(major_xticks)
axes.set_yticks(major_yticks)
axes.legend()


# plotting
plt.title("web-edu (Web graphs)")
plt.xlabel("Edges Added($\%$)")
plt.ylabel("Core Resilience")

plt.savefig(path/'drive'/'My Drive'/'thesis'/'plot6.pdf', dpi = 400)

plt.show()

plt.rc('font', size=13) #controls default text size
plt.rcParams['figure.dpi'] = 100
sns.set_style('whitegrid')
fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(8, 5)) 

x = np.arange(0.01, 0.20, 0.01)
y1 = [0.20, 0.00, 0.00, 0.56, 0.30, 0.00, 0.17, 0.24, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00]
y2 = [0.62, 0.58, 0.60, 0.71, 0.55, 0.75, 0.73, 0.73, 0.76, 0.76, 0.77, 0.77, 0.76, 0.77, 0.78, 0.77, 0.77, 0.78, 0.77]
y3 = [0.63, 0.45, 0.48, 0.47, 0.60, 0.60, 0.64, 0.78, 0.83, 0.88, 0.89, 0.88, 0.87, 0.88, 0.91, 0.93, 0.84, 0.85, 0.82]
y_list = [y1, y2, y3]
line_labels = ["Random", "Greedy", "DNA"]

for y, label in zip(y_list, line_labels):  
    plt.plot(x, y, marker='.', markersize=16, label = label)


major_xticks = [round(num, 2) for num in np.linspace(0, 0.20, 5)]
major_yticks = np.arange(0.1, 1.0 + 0.01, 0.10)

axes.set_xticks(major_xticks)
axes.set_yticks(major_yticks)
axes.legend()


# plotting
plt.title("minnesota(Road Network)")
plt.xlabel("Edges Added($\%$)")
plt.ylabel("Core Resilience")

plt.savefig(path/'drive'/'My Drive'/'thesis'/'plot7.pdf', dpi = 400)

plt.show()

plt.rc('font', size=13) #controls default text size
plt.rcParams['figure.dpi'] = 100
sns.set_style('whitegrid')
fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(8, 5)) 

x = np.arange(0.01, 0.20, 0.01)
y1 = [0.78, 0.80, 0.82, 0.84, 0.76, 0.79, 0.86, 0.87, 0.81, 0.80, 0.68, 0.52, 0.39, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00]
y2 = [0.87, 0.87, 0.89, 0.84, 0.88, 0.87, 0.87, 0.89, 0.89, 0.92, 0.90, 0.93, 0.92, 0.87, 0.89, 0.90, 0.89, 0.89, 0.92]
y3 = [0.85, 0.91, 0.84, 0.86, 0.88, 0.88, 0.88, 0.92, 0.92, 0.89, 0.88, 0.88, 0.91, 0.92, 0.92, 0.90, 0.90, 0.91, 0.90]
y_list = [y1, y2, y3]
line_labels = ["Random", "Greedy", "DNA"]

for y, label in zip(y_list, line_labels):  
    plt.plot(x, y, marker='.', markersize=16, label = label)


major_xticks = [round(num, 2) for num in np.linspace(0, 0.20, 5)]
major_yticks = np.arange(0.1, 1.0 + 0.01, 0.10)

axes.set_xticks(major_xticks)
axes.set_yticks(major_yticks)
axes.legend()


# plotting
plt.title("delaunay-n11(DIMACS10)")
plt.xlabel("Edges Added($\%$)")
plt.ylabel("Core Resilience")

plt.savefig(path/'drive'/'My Drive'/'thesis'/'plot8.pdf', dpi = 400)

plt.show()

plt.rc('font', size=13) #controls default text size
plt.rcParams['figure.dpi'] = 100
sns.set_style('whitegrid')
fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(8, 5)) 

x = np.arange(0.01, 0.20, 0.01)
y1 = [0.69, 0.84, 0.76, 0.87, 0.83, 0.78, 0.68, 0.73, 0.79, 0.74, 0.69, 0.81, 0.81, 0.65, 0.61, 0.55, 0.84, 0.77, 0.89]
y2 = [0.79, 0.69, 0.63, 0.75, 0.74, 0.79, 0.79, 0.73, 0.73, 0.50, 0.75, 0.74, 0.48, 0.60, 0.76, 0.80, 0.81, 0.74, 0.80]
y3 = [0.52, 0.70, 0.73, 0.75, 0.84, 0.81, 0.87, 0.86, 0.89, 0.90, 0.82, 0.82, 0.84, 0.82, 0.87, 0.89, 0.93, 0.96, 0.91]
y_list = [y1, y2, y3]
line_labels = ["Random", "Greedy", "DNA"]

for y, label in zip(y_list, line_labels):  
    plt.plot(x, y, marker='.', markersize=16, label = label)


major_xticks = [round(num, 2) for num in np.linspace(0, 0.20, 5)]
major_yticks = np.arange(0.1, 1.0 + 0.01, 0.10)

axes.set_xticks(major_xticks)
axes.set_yticks(major_yticks)
axes.legend()


# plotting
plt.title("infect_dublin(Proximity Network)")
plt.xlabel("Edges Added($\%$)")
plt.ylabel("Core Resilience")

plt.savefig(path/'drive'/'My Drive'/'thesis'/'plot9.pdf', dpi = 400)

plt.show()

plt.rc('font', size=13) #controls default text size
plt.rcParams['figure.dpi'] = 100
sns.set_style('whitegrid')
fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(8, 5)) 

x = np.arange(0.01, 0.20, 0.01)
y1 = [0.90, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00]
y2 = [0.76, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00]
y3 = [0.92, 0.91, 0.91, 0.93, 0.88, 0.89, 0.92, 0.95, 0.94, 0.93, 0.94, 0.94, 0.94, 0.94, 0.94, 0.94, 0.94, 0.93, 0.88]
y_list = [y1, y2, y3]
line_labels = ["Random", "Greedy", "DNA"]

for y, label in zip(y_list, line_labels):  
    plt.plot(x, y, marker='.', markersize=16, label = label)


major_xticks = [round(num, 2) for num in np.linspace(0, 0.20, 5)]
major_yticks = np.arange(0.1, 1.0 + 0.01, 0.10)

axes.set_xticks(major_xticks)
axes.set_yticks(major_yticks)
axes.legend()


# plotting
plt.title("rt-assad(Retweet Network)")
plt.xlabel("Edges Added($\%$)")
plt.ylabel("Core Resilience")

plt.savefig(path/'drive'/'My Drive'/'thesis'/'plot10.pdf', dpi = 400)

plt.show()

plt.rc('font', size=13) #controls default text size
plt.rcParams['figure.dpi'] = 100
sns.set_style('whitegrid')
fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(8, 5)) 

x = np.arange(1, 11, 1)
y1 = [0.88, 0.70, 0.86, 0.56, 0.77, 0.99, 0.58, 0.79, 0.66, 0.85]
y2 = [0.75, 0.86, 0.79, 0.84, 0.77, 0.70, 0.00, 0.80, 0.74, 0.00]
y3 = [0.23, 0.71, 0.79, 0.82, 0.87, 0.81, 0.76, 0.92, 0.50, 0.00]
y4 = [0.96, 0.86, 0.96, 0.87, 0.86, 0.96, 0.88, 0.89, 0.90, 0.93]

y_list = [y1, y2, y3, y4]
line_labels = ["Original", "Random", "Greedy", "DNA"]

for y, label in zip(y_list, line_labels):  
    plt.plot(x, y, marker='.', markersize=16, label = label)


major_xticks = np.arange(1, 11, 1)
major_yticks = np.arange(0.1, 1.0 + 0.01, 0.10)

axes.set_xticks(major_xticks)
axes.set_yticks(major_yticks)
axes.legend()


# plotting
plt.title("Comparison when 0.1% edges are added")
plt.xlabel("Dataset ID")
plt.ylabel("Core Resilience")

plt.savefig(path/'drive'/'My Drive'/'thesis'/'extra_plot.pdf', dpi = 400)

plt.show()

plt.rc('font', size=13) #controls default text size
plt.rcParams['figure.dpi'] = 100
sns.set_style('whitegrid')
fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(8, 5)) 

x = np.arange(1, 11, 1)
y1 = [57.35, 5.758, 13.01, 70.248, 35.645, 58.073, 40.582, 34.762, 5.719, 28.579]
y_list = [y1]

for y, label in zip(y_list, line_labels):  
    plt.plot(x, y, marker='.', markersize=16, label = label)


major_xticks = np.arange(0, 11, 2)
major_yticks = np.arange(0, 101, 10)

axes.set_xticks(major_xticks)
axes.set_yticks(major_yticks)


# plotting  
plt.title("Running Time Comparison")
plt.xlabel("Dataset ID")
plt.ylabel("Time Taken(seconds)")

plt.savefig(path/'drive'/'My Drive'/'thesis'/'running_time.pdf', dpi = 400)

plt.show()
